<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  
  <display-name>BPStrutsT</display-name>
	
	<context-param>
	  <param-name>webAppRootKey</param-name>
	  <param-value>BPStrutsT</param-value>
	</context-param>

   <!-- 后台日志显示. -->
   <context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:configPros/log4j.properties</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	
	<!-- 设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:configXml/spring-security.xml,
            classpath:configXml/spring-application.xml,
            classpath:configXml/spring-jobtask.xml,
            classpath:configXml/spring-servlet.xml,
            classpath:configXml/redis-config.xml,
            classpath:configXml/spring-shiro.xml
		</param-value>
	</context-param>
	
	<!-- Druid 配置 -->
	<!-- Druid,监控数据库,以及WEB访问连接信息 -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*,/download/*</param-value>
		</init-param>
		<!-- max session -->
		<init-param>
			<param-name>sessionStatMaxCount</param-name>
			<param-value>2000</param-value>
		</init-param>
		<!-- close session -->
		<init-param>
	        <param-name>sessionStatEnable</param-name>
	        <param-value>false</param-value>
	    </init-param>
	    
	    <!-- 
	    <init-param>
			<param-nxxame>principalSessionName</param-name> 
			<param-value>xxx.user</param-value>
		</init-param>
	    <init-param>
			<param-name>principalCookieName</param-name> 
			<param-value>xxx.user</param-value>
		</init-param>
		-->
		
	    <!-- 监控单个url调用的sql列表 -->
	    <init-param>
			<param-name>profileEnable</param-name> 
			<param-value>true</param-value>
		</init-param>
	    
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<init-param>
			<!-- 允许清空统计数据 -->
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 用户名 -->
			<param-name>loginUsername</param-name>
			<param-value>druid</param-value>
		</init-param>
		<init-param>
			<!-- 密码 -->
			<param-name>loginPassword</param-name>
			<param-value>druid</param-value>
		</init-param>
		
		<!-- 允许访问和拒绝访问IP (deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。如果allow没有配置或者为空，则允许所有访问 其他详情参) -->
		<init-param>
			<param-name>allow</param-name> 
			<param-value>127.0.0.1</param-value>
		</init-param> 
		<init-param>
			<param-name>deny</param-name> 
			<param-value>128.242.127.4,128.242.127.6</param-value>
		</init-param>

	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>	
	
	<!-- 加密 Filter 的过滤,有需要的时候再打开.(关闭) -->
	<!-- 
	 <filter-name>securityFilter</filter-name>
	    <filter-class>com.javabase.base.security.filter.JavaBaseSecurityHttpFilter</filter-class>
	    <init-param>
	      <param-name>desSecretKey</param-name>
	      <param-value>!D*GV$%9</param-value>
	    </init-param>
	    <init-param>
	      <param-name>securityPath</param-name>
	      <param-value>login/doLogin;system/authenIdentity;payInfo/bindBankCard;payInfo/recharge;autoWithdraw/commitWithdrawInfo;bankCardManager/removeBindCard</param-value>
	    </init-param>
	    <init-param>
	      <param-name>isSecret</param-name>
	      <param-value>0</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>securityFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	  </filter-mapping>
	 -->
	
	<!-- encodeing set -->
	<filter>
		<filter-name>encode</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param> 
            <param-name>forceEncoding</param-name> 
            <param-value>true</param-value> 
        </init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encode</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- listener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
	
	<!-- 配置Spring核心控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:configXml/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>


	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.do</url-pattern>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>
	
   <!-- 权限  Spring Security3.1 的权限过滤-->
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/background/*</url-pattern>
    </filter-mapping>
	
	<!--
	<error-page>
		<error-code>404</error-code>
		<location>/404/404.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/error.jsp</location>
	</error-page>
	-->
	
	
	<!-- 指明对于如下资源文件不采用spring的过滤器 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.xml</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.swf</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.zip</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
		
	<!-- session失效时间设置. -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>
